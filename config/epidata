server {
#        listen         80;
        listen 80 default_server;
	listen [::]:80 default_server;
        server_name    _;
#        return         301 https://$server_name$request_uri;
        return         301 https://server_base_url:443;
}

server {
        listen 443 ssl;
        server_name server_base_url;

        root /usr/share/nginx/html;
        index index.html index.htm;

        ssl on;
        #include snippets/self-signed.conf;

        ssl_certificate /etc/ssl/certs/epidata_self_signed.crt;
        ssl_certificate_key /etc/ssl/certs/epidata_self_signed.key;

        ssl_ciphers "AES128+EECDH:AES128+EDH";
        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
        ssl_prefer_server_ciphers on;
        ssl_session_cache shared:SSL:10m;
        add_header Strict-Transport-Security "max-age=63072000; includeSubDomains";
        add_header X-Content-Type-Options nosniff;
 #       ssl_stapling on; # Requires nginx >= 1.3.7
 #       ssl_stapling_verify on; # Requires nginx => 1.3.7
        resolver_timeout 5s;

        error_page 404 /404;
        error_page 400 401 402 403 500 501 502 503 504 /error;

        location /jupyter {
                proxy_buffering off;
                proxy_redirect off;
                proxy_pass https://127.0.0.1:8888;
                proxy_http_version 1.1;

                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Scheme $scheme;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header Host $http_host;
                proxy_set_header X-NginX-Proxy true;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection "upgrade";

                proxy_intercept_errors on;
                error_page 404 /404;
                error_page 400 401 402 403 500 501 502 503 504 /error;
        }

        location / {
                proxy_buffering off;
                proxy_pass http://127.0.0.1:9000;

                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Scheme $scheme;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header Host $http_host;

                proxy_set_header X-NginX-Proxy true;
        }
}


